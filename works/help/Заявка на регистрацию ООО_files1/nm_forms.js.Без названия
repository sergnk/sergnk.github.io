$(function(){

	$(".modal-clear-close").click(function() {
		$(".form-group").removeClass('has-success').removeClass('has-error');
	});

$(".getmodal").click(function(){
	var $this = $(this);
	var link_hash = $this.attr('href');
	var modal_id = link_hash;
	console.log(modal_id);

	if($("#mn_overlay").length == 0){
		$("body").append('<div id="mn_overlay"></div>');
	}
	var from_top = $(window).scrollTop();
	$("#mn_overlay").addClass("mn_overlay_shown").animate({ "opacity": "0.8" }, 400);
    //$(modal_id).addClass("m_form_content_shown").css({"opacity":"0", "display":"block", "top":"50%", "left":"50%", "margin-top": "-"+($(modal_id).outerHeight() / 2)+"px", "margin-left": "-"+($(modal_id).outerWidth() / 2)+"px"}).animate({ "opacity": "1" }, 400);
    $(modal_id).addClass("m_form_content_shown").css({"opacity":"0", "display":"block", "top": (from_top+100)+"px", "left":"50%", "margin-left": "-"+($(modal_id).outerWidth() / 2)+"px"}).animate({ "opacity": "1" }, 400);
	return false;
})


$("body").on("click",".form-send-button",function(e){
		e.preventDefault();
		var parent_form = $(this).parents(".m_form_content:first").find("form:first");
		var parent_form_fields = $(this).parents(".m_form_content:first").find(".non_empty_field");
		var parent_form_id = $(this).parents(".m_form_content:first").find("form:first").attr("id");
		parent_form_fields.each(function(index, el) {
			
			if(!$(this).val().replace(/\s+/g, '').length){
				$(this).removeClass("has_success").addClass("has_error");
				if($(this).hasClass("non_empty_select")){
					$(this).parent().addClass("select_error");
				}
			}else{
				$(this).removeClass("has_error").addClass("has_success");
					if($(this).hasClass("non_empty_select")){
						$(this).parent().removeClass("select_error");
					}
			}

		});

		if($(".has_success", parent_form).length == $(".non_empty_field", parent_form).length){
			$(".form-group", parent_form).removeClass('has-error').addClass("has-success");
			$(this).attr('disabled', 'true').text("Подождите...").val("Подождите...");


			sendAjax2(parent_form_id);	
		}else{
			return false;
		}

	})


$(".form-send-button2").click(function(e){
		e.preventDefault();
		var parent_form = $(this).parents(".m_form_content:first").find("form:first");
		var parent_form_fields = $(this).parents(".m_form_content:first").find(".non_empty_field");
		var parent_form_id = $(this).parents(".m_form_content:first").find("form:first").attr("id");
		parent_form_fields.each(function(index, el) {
			
			if(!$(this).val().replace(/\s+/g, '').length){
				$(this).removeClass("has_success").addClass("has_error");
			}else{
				$(this).removeClass("has_error").addClass("has_success");
			}

		});

		if($(".has_success", parent_form).length == $(".non_empty_field", parent_form).length){
			$(".form-group", parent_form).removeClass('has-error').addClass("has-success");
			$(this).attr('disabled', 'true').text("Подождите...").val("Подождите...");


			sendAjax(parent_form_id);	
		}else{
			return false;
		}

	})



		$(".non_empty_field").focusout(function(event) {
				if(!$(this).val().replace(/\s+/g, '').length){
					$(this).removeClass("has_success").addClass("has_error");
				}else{
					$(this).removeClass("has_error").addClass("has_success");
				}
		});

		/***Close***/

		//by data attr
		$("[data-mn-modal='dismiss']").click(function() {

			var parent_wrapper = $(this).parents(".m_form_content:first");
			var parent_wrapper_id = parent_wrapper.attr("id");

     		$("#mn_overlay").animate({"opacity": "0",},400, function() {
     			$(this).css({"display":"none"}).removeClass('mn_overlay_shown');
     		}).clearQueue();
     		$("#"+parent_wrapper_id).animate({"opacity": "0",},400, function() {
     			$(this).css({"display":"none"}).removeClass('m_form_content_shown');
     			$(this).find(".non_empty_field").removeClass('has_error');
     		}).clearQueue();     		
			return false;
		});

		// by clicking on fader block
     	$("body").on("click","#mn_overlay",function(){

     		$(this).animate({"opacity": "0",},400, function() {
     			$(this).css({"display":"none"}).removeClass('mn_overlay_shown');
     		}).clearQueue();
     		$(".m_form_content_shown").animate({"opacity": "0",},400, function() {
     			$(this).css({"display":"none"}).removeClass('m_form_content_shown');
     			$(this).find(".non_empty_field").removeClass('has_error');
     		}).clearQueue();     		

     	});

		// by pressing Esc btn
      	$(document).on("keypress",function(e){
       		if(e.keyCode==27){

	     		$("#mn_overlay").animate({"opacity": "0",},400, function() {
	     			$(this).css({"display":"none"}).removeClass('mn_overlay_shown');
	     		}).clearQueue();
	     		$(".m_form_content_shown").animate({"opacity": "0",},400, function() {
	     			$(this).css({"display":"none"}).removeClass('m_form_content_shown');
	     			$(this).find(".non_empty_field").removeClass('has_error');
	     		}).clearQueue(); 

     		}
     	})


})//end function


function sendAjax(form_id) {
		var form = $("#"+form_id+"");
		var serialized_data = form.serialize();

					$.ajax({  
					type: "POST",  
					url: "/form/custom.php",  
					data: serialized_data,  
					success: function(response){
						form.empty();
						form.html(response);
						form.next(".modal-footer").remove();
					}
			  
						   }); 

					} 



function sendAjax2(form_id) {
		var form_ex = $("#"+form_id+"");
		var form = document.forms[form_id];
		var formData = new FormData(form);

 		var xhr = new JSONHttpRequest();
 		xhr.open("POST", "/form/action.php");

	            xhr.onreadystatechange = function() {
	                if (xhr.readyState == 4) {
	                    if(xhr.status == 200) {
	                        raw_data = xhr.responseText;
	                        data = JSON.parse(raw_data);
	                        if(data) {
								form_ex.empty();
								form_ex.html(data.message);
								form_ex.next(".modal-footer").remove();

								/***цели яндекс метрики***/
								if(data.yandex_metrika_id == "CALLME_TOP_SEND"){
									yaCounter22729432.reachGoal('CALLME_TOP_SEND');
								}
								if(data.yandex_metrika_id == "Zakazat_Likvidaciya"){
									yaCounter22729432.reachGoal('Zakazat_Likvidaciya');
								}
								if(data.yandex_metrika_id == "REVIEW_SEND"){
									yaCounter22729432.reachGoal('REVIEW_SEND');
								}																
	                        } else {
								form_ex.empty();
								form_ex.html("<p>Ошибка!</p>");
								form_ex.next(".modal-footer").remove();
	                        }
	                    }
	                }
	            };
	    xhr.send(formData);
} 

function str_replace(search, replace, subject) {
	return subject.replace(new RegExp (search, 'g'), replace);
}

function JSONHttpRequest() {
    var _xmlHttpRequest = new XMLHttpRequest();
    var _responseJSON = null;
    var _userContentType = false;
    // INFO Defining 'this' as '_self' improves compression, since keywords won't be shortened,
    //      but variables will, and it delivers us from the need to reset the scope of the anonymous
    //      function in the for-loop via call() or apply().
    var _self = this;
 
    var property = {
        get: function() {
            try {
                _responseJSON = _xmlHttpRequest.responseText ? (!_responseJSON ? JSON.parse(_xmlHttpRequest.responseText) : _responseJSON) : null;
            }
            catch (e) {
                if (_self.strictJSON)
                    throw e;
            }
            return _responseJSON;
        },
        enumerable: true,
        configurable: true
    }
     
    _self.strictJSON = true;
    Object.defineProperty(_self, 'responseJSON', property);
     
    _self.sendJSON = function(data) {
        try {
            data = JSON.stringify(data);
            _responseJSON = null;
            if (!_userContentType)
                _xmlHttpRequest.setRequestHeader('Content-Type', 'application/json;charset=encoding');         
            _userContentType = false;
        }
        catch (e) {
            if (_self.strictJSON)
                throw e;
        }
        _xmlHttpRequest.send(data);
    }
     
    // INFO proxy setup
     
    function proxy(name) {
        try {
            if ((typeof _xmlHttpRequest[name]) == 'function') {
                _self[name] = function() {
                    if (name == 'setRequestHeader')
                        _userContentType = arguments[0].toLowerCase() == 'content-type';
                    return _xmlHttpRequest[name].apply(_xmlHttpRequest, Array.prototype.slice.apply(arguments));
                };
            }
            else {
                property.get = function() { return _xmlHttpRequest[name]; }
                property.set = function(value) { _xmlHttpRequest[name] = value; }
                Object.defineProperty(_self, name, property);  
            }
        }
        catch (e) {
            // NOTE Swallow any exceptions, which may rise here.
        }
    }
     
    // FIX onreadystatechange is not enumerable [Opera]
    proxy('onreadystatechange');
     
    for (n in _xmlHttpRequest)
        proxy(n);
}